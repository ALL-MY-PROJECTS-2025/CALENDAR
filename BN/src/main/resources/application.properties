spring.application.name=demo

server.port=8095
# -----------------
# UPLOAD PATH
# -----------------
#root.path=c:
root.path=/
upload.path=upload
image.path=images
music.path=musics
edu.path=education
file.path=files

# -----------------
# DOCKER COMPOSE HEALTH CHECK
# -----------------
# Actuator 엔드포인트 활성화
management.endpoints.web.exposure.include=prometheus,health,info,metrics
management.endpoint.health.show-details=always
management.endpoint.prometheus.enabled=true

# Content-Type 헤더 설정을 위한 프로메테우스 설정
management.metrics.export.prometheus.enabled=true
management.prometheus.metrics.export.enabled=true     
management.endpoints.web.base-path=/actuator        
management.endpoints.web.path-mapping.prometheus=prometheus    

# 메트릭 태깅 설정
management.metrics.tags.application=${spring.application.name}
management.metrics.enable.all=true   

# 애플리케이션 이름 설정 (메트릭 태깅용)
spring.application.name=bn-application   

# 상태 정보 상세 표시  
management.endpoint.health.show-components=always  

# 헬스 체크 그룹 설정  
management.endpoint.health.group.readiness.include=readinessState,db,diskSpace  

# 헬스 체크 유효성 검사 비활성화
management.endpoint.health.validate-group-membership=false



#----------------------------------------------------------------
# KAKAO AUTH
#----------------------------------------------------------------
#KAKAO
spring.security.oauth2.client.registration.kakao.client-id=-
spring.security.oauth2.client.registration.kakao.client-secret=-
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8090/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image,account_email
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.kakao.logout.redirect.uri=http://localhost:8090/login

#KAKAO PROVIDER
spring.security.oauth2.client.provider.kakao.authorization-uri = https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri = https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri = https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute = id


# ---------------------------------------------------
# NAVER OAUTH
# ---------------------------------------------------
spring.security.oauth2.client.registration.naver.client-id=-
spring.security.oauth2.client.registration.naver.client-secret=-
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8090/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.provider=naver

#NAVER PROVIDER
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response


# ---------------------------------------------------
# GOOGLE OAUTH
# ---------------------------------------------------
#Google
spring.security.oauth2.client.registration.google.client-id=-
spring.security.oauth2.client.registration.google.client-secret=-
spring.security.oauth2.client.registration.google.scope=email,profile
